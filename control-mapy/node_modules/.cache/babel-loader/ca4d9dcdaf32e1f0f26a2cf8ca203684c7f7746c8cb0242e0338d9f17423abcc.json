{"ast":null,"code":"import api from './api';\nexport const contactService = {\n  // Get contacts for a specific service\n  getContactsForService: async serviceId => {\n    try {\n      const response = await api.get(`/service-contacts/${serviceId}/contacts`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching contacts for service:', error);\n      throw error;\n    }\n  },\n  // Delete a contact (admin/owner only)\n  deleteContact: async (serviceId, contactId) => {\n    try {\n      const response = await api.delete(`/service-contacts/${serviceId}/contacts/${contactId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting contact:', error);\n      throw error;\n    }\n  },\n  // Create a new contact\n  createContact: async (serviceId, contactData) => {\n    try {\n      const response = await api.post(`/service-contacts/${serviceId}/contacts`, contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating contact:', error);\n      throw error;\n    }\n  },\n  // Update a contact\n  updateContact: async (serviceId, contactId, updateData) => {\n    try {\n      const response = await api.put(`/service-contacts/${serviceId}/contacts/${contactId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating contact:', error);\n      throw error;\n    }\n  }\n};\nexport default contactService;","map":{"version":3,"names":["api","contactService","getContactsForService","serviceId","response","get","data","error","console","deleteContact","contactId","delete","createContact","contactData","post","updateContact","updateData","put"],"sources":["C:/Users/David Noguera/Documents/MapaRepo/control-mapy/src/services/apiContacts.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const contactService = {\r\n  // Get contacts for a specific service\r\n  getContactsForService: async (serviceId) => {\r\n    try {\r\n      const response = await api.get(`/service-contacts/${serviceId}/contacts`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching contacts for service:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a contact (admin/owner only)\r\n  deleteContact: async (serviceId, contactId) => {\r\n    try {\r\n      const response = await api.delete(`/service-contacts/${serviceId}/contacts/${contactId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting contact:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new contact\r\n  createContact: async (serviceId, contactData) => {\r\n    try {\r\n      const response = await api.post(`/service-contacts/${serviceId}/contacts`, contactData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating contact:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update a contact\r\n  updateContact: async (serviceId, contactId, updateData) => {\r\n    try {\r\n      const response = await api.put(`/service-contacts/${serviceId}/contacts/${contactId}`, updateData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating contact:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default contactService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACAC,qBAAqB,EAAE,MAAOC,SAAS,IAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,qBAAqBF,SAAS,WAAW,CAAC;MACzE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,aAAa,EAAE,MAAAA,CAAON,SAAS,EAAEO,SAAS,KAAK;IAC7C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,MAAM,CAAC,qBAAqBR,SAAS,aAAaO,SAAS,EAAE,CAAC;MACzF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAK,aAAa,EAAE,MAAAA,CAAOT,SAAS,EAAEU,WAAW,KAAK;IAC/C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,IAAI,CAAC,qBAAqBX,SAAS,WAAW,EAAEU,WAAW,CAAC;MACvF,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,aAAa,EAAE,MAAAA,CAAOZ,SAAS,EAAEO,SAAS,EAAEM,UAAU,KAAK;IACzD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,GAAG,CAAC,qBAAqBd,SAAS,aAAaO,SAAS,EAAE,EAAEM,UAAU,CAAC;MAClG,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}