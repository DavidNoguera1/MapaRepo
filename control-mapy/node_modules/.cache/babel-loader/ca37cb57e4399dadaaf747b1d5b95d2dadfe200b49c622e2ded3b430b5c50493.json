{"ast":null,"code":"import api from './api';\nimport { getImageUrl } from '../utils/imageUtils';\nexport const serviceService = {\n  // Get list of services with pagination\n  getServices: async (page = 0, limit = 10) => {\n    const offset = page * limit;\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await api.get(`/services?${params}`);\n    // Map cover_image_url to full URL\n    const services = response.data.services.map(service => ({\n      ...service,\n      cover_image_url: getImageUrl(service.cover_image_url)\n    }));\n    return {\n      services,\n      pagination: response.data.pagination\n    };\n  },\n  // Get service by ID\n  getServiceById: async id => {\n    const response = await api.get(`/services/${id}`);\n    const service = response.data.service;\n    return {\n      ...service,\n      cover_image_url: getImageUrl(service.cover_image_url)\n    };\n  },\n  // Upload service cover image\n  uploadServiceCover: async (serviceId, file) => {\n    const formData = new FormData();\n    formData.append('service_cover', file);\n    const response = await api.post(`/service-covers/${serviceId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Delete service cover image\n  deleteServiceCover: async serviceId => {\n    const response = await api.delete(`/service-covers/${serviceId}`);\n    return response.data;\n  },\n  // Update service details\n  updateService: async (serviceId, updatedService) => {\n    const response = await api.put(`/services/${serviceId}`, updatedService);\n    return response.data;\n  },\n  // Delete service\n  deleteService: async serviceId => {\n    const response = await api.delete(`/services/${serviceId}`);\n    return response.data;\n  }\n};\nexport default serviceService;","map":{"version":3,"names":["api","getImageUrl","serviceService","getServices","page","limit","offset","params","URLSearchParams","toString","response","get","services","data","map","service","cover_image_url","pagination","getServiceById","id","uploadServiceCover","serviceId","file","formData","FormData","append","post","headers","deleteServiceCover","delete","updateService","updatedService","put","deleteService"],"sources":["C:/Users/David Noguera/Desktop/MapyWorks/control-mapy/src/services/apiServices.js"],"sourcesContent":["import api from './api';\r\nimport { getImageUrl } from '../utils/imageUtils';\r\n\r\nexport const serviceService = {\r\n  // Get list of services with pagination\r\n  getServices: async (page = 0, limit = 10) => {\r\n    const offset = page * limit;\r\n    const params = new URLSearchParams({\r\n      limit: limit.toString(),\r\n      offset: offset.toString()\r\n    });\r\n\r\n    const response = await api.get(`/services?${params}`);\r\n    // Map cover_image_url to full URL\r\n    const services = response.data.services.map(service => ({\r\n      ...service,\r\n      cover_image_url: getImageUrl(service.cover_image_url)\r\n    }));\r\n\r\n    return {\r\n      services,\r\n      pagination: response.data.pagination\r\n    };\r\n  },\r\n\r\n  // Get service by ID\r\n  getServiceById: async (id) => {\r\n    const response = await api.get(`/services/${id}`);\r\n    const service = response.data.service;\r\n    return {\r\n      ...service,\r\n      cover_image_url: getImageUrl(service.cover_image_url)\r\n    };\r\n  },\r\n\r\n  // Upload service cover image\r\n  uploadServiceCover: async (serviceId, file) => {\r\n    const formData = new FormData();\r\n    formData.append('service_cover', file);\r\n\r\n    const response = await api.post(`/service-covers/${serviceId}/upload`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  },\r\n\r\n  // Delete service cover image\r\n  deleteServiceCover: async (serviceId) => {\r\n    const response = await api.delete(`/service-covers/${serviceId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update service details\r\n  updateService: async (serviceId, updatedService) => {\r\n    const response = await api.put(`/services/${serviceId}`, updatedService);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete service\r\n  deleteService: async (serviceId) => {\r\n    const response = await api.delete(`/services/${serviceId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default serviceService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,SAASC,WAAW,QAAQ,qBAAqB;AAEjD,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACAC,WAAW,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;IAC3C,MAAMC,MAAM,GAAGF,IAAI,GAAGC,KAAK;IAC3B,MAAME,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCH,KAAK,EAAEA,KAAK,CAACI,QAAQ,CAAC,CAAC;MACvBH,MAAM,EAAEA,MAAM,CAACG,QAAQ,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,aAAaJ,MAAM,EAAE,CAAC;IACrD;IACA,MAAMK,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACD,QAAQ,CAACE,GAAG,CAACC,OAAO,KAAK;MACtD,GAAGA,OAAO;MACVC,eAAe,EAAEf,WAAW,CAACc,OAAO,CAACC,eAAe;IACtD,CAAC,CAAC,CAAC;IAEH,OAAO;MACLJ,QAAQ;MACRK,UAAU,EAAEP,QAAQ,CAACG,IAAI,CAACI;IAC5B,CAAC;EACH,CAAC;EAED;EACAC,cAAc,EAAE,MAAOC,EAAE,IAAK;IAC5B,MAAMT,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,aAAaQ,EAAE,EAAE,CAAC;IACjD,MAAMJ,OAAO,GAAGL,QAAQ,CAACG,IAAI,CAACE,OAAO;IACrC,OAAO;MACL,GAAGA,OAAO;MACVC,eAAe,EAAEf,WAAW,CAACc,OAAO,CAACC,eAAe;IACtD,CAAC;EACH,CAAC;EAED;EACAI,kBAAkB,EAAE,MAAAA,CAAOC,SAAS,EAAEC,IAAI,KAAK;IAC7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEH,IAAI,CAAC;IAEtC,MAAMZ,QAAQ,GAAG,MAAMV,GAAG,CAAC0B,IAAI,CAAC,mBAAmBL,SAAS,SAAS,EAAEE,QAAQ,EAAE;MAC/EI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOjB,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAe,kBAAkB,EAAE,MAAOP,SAAS,IAAK;IACvC,MAAMX,QAAQ,GAAG,MAAMV,GAAG,CAAC6B,MAAM,CAAC,mBAAmBR,SAAS,EAAE,CAAC;IACjE,OAAOX,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAiB,aAAa,EAAE,MAAAA,CAAOT,SAAS,EAAEU,cAAc,KAAK;IAClD,MAAMrB,QAAQ,GAAG,MAAMV,GAAG,CAACgC,GAAG,CAAC,aAAaX,SAAS,EAAE,EAAEU,cAAc,CAAC;IACxE,OAAOrB,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAoB,aAAa,EAAE,MAAOZ,SAAS,IAAK;IAClC,MAAMX,QAAQ,GAAG,MAAMV,GAAG,CAAC6B,MAAM,CAAC,aAAaR,SAAS,EAAE,CAAC;IAC3D,OAAOX,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAeX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}